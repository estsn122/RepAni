.d-flex.justify-content-between.mb-3
  h4.my-auto エピソード
  = link_to "編集", edit_admin_anime_episodes_path(anime), class: 'btn btn-outline-primary'
table.table.table-bordered
  thead
    tr
      th.text-center scope='col' width='10%' 話数
      th.text-center scope='col' width='30%' サブタイトル
      th.text-center scope='col' width='20%' 放送日
      th.text-center scope='col' width='10%' 時間(分)
      th.text-center scope='col' width='10%' 公開
      th.text-center scope='col' width='10%' ツイート
      th.text-center scope='col' width='10%'
  tbody#episodes_list
    - anime.episodes.sort_by(&:num).each do |episode|
      tr id="episode_#{episode.id}"
        td.text-center.align-middle.episode-num = episode.num
        td.text-center.align-middle.subtitle = episode.subtitle
        td.text-center.align-middle.broadcast_datetime = l episode.broadcast_datetime, format: :default
        td.text-center.align-middle.air_time = episode.air_time
        td.text-center.align-middle.public = episode.public
        // TODO: 後ほどhelper
        - if episode.tweets.empty?
          td.text-center.align-middle
            = icon 'fas', 'minus-circle', class:'red mr-1'
            = link_to '未取得', new_admin_anime_episode_tweets_import_path(episode.id)
        - else
          td.text-center.align-middle
            = icon 'fas', 'plus-circle', class:'green mr-1'
            = link_to '取得済', admin_anime_episode_tweets_path(episode.id)
        td.text-center.align-middle = link_to '削除', admin_anime_episode_path(episode.id), method: :delete, class: 'btn btn-danger',
          data: { confirm: "#{episode.num}話を削除します。\nツイートを取得してる場合、ツイートも削除されますがよろしいですか。" }, remote: true
